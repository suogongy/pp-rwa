type Token @entity(immutable: true) {
  id: ID!
  address: Bytes!
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigInt!
  owner: Bytes!
  isPaused: Boolean!
  version: String!
  transfers: [Transfer!]! @derivedFrom(field: "token")
  mints: [Mint!]! @derivedFrom(field: "token")
  burns: [Burn!]! @derivedFrom(field: "token")
  batchTransfers: [BatchTransfer!]! @derivedFrom(field: "token")
  whitelistUpdates: [WhitelistUpdate!]! @derivedFrom(field: "token")
  createdAt: BigInt!
  updatedAt: BigInt!
}

type Transfer @entity(immutable: true) {
  id: ID!
  token: Token!
  from: Bytes!
  to: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
  timestamp: BigInt!
}

type Mint @entity(immutable: true) {
  id: ID!
  token: Token!
  to: Bytes!
  amount: BigInt!
  txId: Bytes!
  blockNumber: BigInt!
  transactionHash: Bytes!
  timestamp: BigInt!
}

type Burn @entity(immutable: true) {
  id: ID!
  token: Token!
  from: Bytes!
  amount: BigInt!
  txId: Bytes!
  blockNumber: BigInt!
  transactionHash: Bytes!
  timestamp: BigInt!
}

type BatchTransfer @entity(immutable: true) {
  id: ID!
  token: Token!
  from: Bytes!
  recipients: [Bytes!]!
  amounts: [BigInt!]!
  batchId: Bytes!
  totalAmount: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
  timestamp: BigInt!
}

type WhitelistUpdate @entity(immutable: true) {
  id: ID!
  token: Token!
  account: Bytes!
  status: Boolean!
  blockNumber: BigInt!
  transactionHash: Bytes!
  timestamp: BigInt!
}

type Account @entity(immutable: true) {
  id: ID!
  address: Bytes!
  transfersFrom: [Transfer!]!
  transfersTo: [Transfer!]!
  mintsReceived: [Mint!]!
  burnsFrom: [Burn!]!
  batchTransfersFrom: [BatchTransfer!]!
  whitelistUpdates: [WhitelistUpdate!]!
  createdAt: BigInt!
  updatedAt: BigInt!
}